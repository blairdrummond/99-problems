(define (range a b) (if (eqv? a b) () (cons a (range (+ a 1) b)) ))

;;; This is actually in reverse, but that isn't important for our purposes
(define (numToList n)  (if  (< n 10) (cons n ()) (cons (remainder n 10)  (numToList (truncate (/ n 10))))))

(define (xreverse l) (if (equal? l ())) 
                            l   
			    (append 
			     (reverseL (cdr (l))) 
			     (list (car l)))
			    )

(define (palindrome a) )
